#include <stdio.h>
void find_u_and_f(float matrix[3][3], float rhs[3], float u[3], float *f) {
    // Step 1: Make leading entry of row 1 into 1 by dividing
    for (int i = 0; i < 3; i++) {
        matrix[0][i] /= 4.0;
    }
    rhs[0] /= 4.0;

    // Step 2: Make the leading entry of row 2 to 0
    float factor = matrix[1][0];
    for (int i = 0; i < 3; i++) {
        matrix[1][i] -= factor * matrix[0][i];
    }
    rhs[1] -= factor * rhs[0];

    // Step 3: Make the leading entry of row 3 to 0
    factor = matrix[2][0];
    for (int i = 0; i < 3; i++) {
        matrix[2][i] -= factor * matrix[0][i];
    }
    rhs[2] -= factor * rhs[0];

    // Step 4: Make the second entry of row 3 to 0
    factor = matrix[2][1] / matrix[1][1];
    for (int i = 1; i < 3; i++) {
        matrix[2][i] -= factor * matrix[1][i];
    }
    rhs[2] -= factor * rhs[1];

    // Back-substitute to find u
    u[2] = rhs[2] / matrix[2][2];
    u[1] = (rhs[1] - matrix[1][2] * u[2]) / matrix[1][1];
    u[0] = (rhs[0] - matrix[0][2] * u[2] - matrix[0][1] * u[1]) / matrix[0][0];

    // Set f to 0 as given in the problem
    *f = 0;
}

int main() {
    float centerX = 0.0f, centerY = 2.1667f; 
    float radius = 2.1667f;                    
    float points[2][2] = { {0.0f, 0.0f}, {2.0f, 3.0f} }; 
    float *center = &centerX;
    float *radiusPtr = &radius;
    float (*pointsPtr)[2] = points; 
    float matrix[3][3] = {{4, 6, 1}, {0, 0, 1}, {1, 0, 0}};
    float rhs[3] = {-13, 0, 0};
    float u[3];
    float f;
    find_u_and_f(matrix, rhs, u, &f);
    printf("u = [%.2f, %.2f, %.2f]\n", u[0], u[1], u[2]);
    printf("f = %.2f\n", f);
    printf("Equation of the circle:3x^2 + 3y^2-13y = 0\n");
    FILE *file = fopen("data.txt", "w");
    if (file == NULL) {
        perror("Error opening file");
        return 1;}
    fprintf(file, "Center: %.4f, %.4f\n", *center, *(center + 1));
    fprintf(file, "Radius: %.4f\n", *radiusPtr);
    fprintf(file, "Points: (%.1f, %.1f), (%.1f, %.1f)\n", 
            pointsPtr[0][0], pointsPtr[0][1], pointsPtr[1][0], pointsPtr[1][1]);
    fclose(file);
    printf("Data written to data.txt successfully.\n");
    return 0;
}










